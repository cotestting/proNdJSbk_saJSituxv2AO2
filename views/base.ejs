<!DOCTYPE html>
<html>
	<head>
		<title>New Sails Apps</title>
		<!-- Viewport mobile tag for sensible mobile support -->
		<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
		<!-- Stylesheets and Preprocessors==============================Y ou can always bring in CSS files manually with `<link>` tags, or asynchronously
		using a solution like AMD (RequireJS).  Or, if you like, you can take advantage 
		of Sails' conventional asset pipeline (boilerplate Gruntfile).

		By default, stylesheets from your `assets/styles` folder are included
		here automatically (between STYLES and STYLES END). Both CSS (.css) and LESS (.less)
		are supported. In production, your styles will be minified and concatenated into
		a single file.
		
		To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
		For example, here are a few things you could do:
			
			+ Change the order of your CSS files
			+ Import stylesheets from other directories
			+ Use a different or additional preprocessor, like SASS, SCSS or Stylus
	-->
		<!--STYLES-->
		<link rel="stylesheet" href="/styles/base.css">
		<link rel="stylesheet" href="/styles/angular-toastr.css">
		<link rel="stylesheet" href="/styles/importer.css">
		<link rel="stylesheet" href="/styles/pwt/animate.min.css">
		<link rel="stylesheet" href="/styles/pwt/frontpage.css">
		<link rel="stylesheet" href="/styles/pwt/powertour-connectors.css">
		<link rel="stylesheet" href="/styles/pwt/powertour-mobile.css">
		<link rel="stylesheet" href="/styles/pwt/powertour-style-clean.css">
		<link rel="stylesheet" href="/styles/pwt/powertour.2.2.0.css">
		<link rel="stylesheet" href="/styles/pwt/style.css">
		<link rel="stylesheet" href="/styles/reset.css">
		<link rel="stylesheet" href="/styles/style-content.css">
		<link rel="stylesheet" href="/styles/style.css">
		<link rel="stylesheet" href="/styles/style2.css">
		<link rel="stylesheet" href="/styles/zander.css">
		<!--STYLES END-->
	</head>
	<body>
		<nav class="navbar navbar-default navbar-i navbar-fixed-top">
			<div class="container-fluid">
				<div class="navbar-header">
					<a class="navbar-brand" href="/">
						<img alt="iTUX labs" src="...">
					</a>
				</div>
				<div class="collapse navbar-collapse">
					<ul class="nav navbar-nav navbar-right">
						<li class="active"><a href="#">Que es?</a></li>
						<li><a href="#">Sign In</a></li>
						<li><a href="#">Sign Up</a></li>
					</ul>
				</div>
			</div>
		</nav>	
		<%- body %>
			<!-- Client-side Templates========================H TML templates are important prerequisites of modern, rich client applications.
			To work their magic, frameworks like Backbone, Angular, Ember, and Knockout require that you load these templates client-side.
			By default, your Gruntfile is configured to automatically load and precompile client-side JST templates in your `assets/templates`
			folder, then include them here automatically (between TEMPLATES and TEMPLATES END). To customize this behavior to fit your
			needs, just edit `tasks/pipeline.js`. For example, here are a few things you could do: + Import templates from other directories
			+ Use a different template engine (handlebars, jade, dust, etc.) + Internationalize your client-side templates using a server-side
			stringfile before they're served. -->
			<!--TEMPLATES-->
			
			<!--TEMPLATES END-->
			<!-- Client-side Javascript========================Y ou can always bring in JS files manually with `script` tags, or asynchronously
			on the client using a solution like AMD (RequireJS). Or, if you like, you can take advantage of Sails' conventional asset
			pipeline (boilerplate Gruntfile). By default, files in your `assets/js` folder are included here automatically (between SCRIPTS
			and SCRIPTS END). Both JavaScript (.js) and CoffeeScript (.coffee) are supported. In production, your scripts will be minified
			and concatenated into a single file. To customize any part of the built-in behavior, just edit `tasks/pipeline.js`. For example,
			here are a few things you could do: + Change the order of your scripts + Import scripts from other directories + Use a different
			preprocessor, like TypeScript -->
			<!--SCRIPTS-->
			<script src="/js/dependencies/sails.io.js"></script>
			<script src="/js/dependencies/angular.1.3.15.js"></script>
			<script src="/js/dependencies/angular-toastr.js"></script>
			<script src="/js/dependencies/compareTo.module.js"></script>
			<script src="/js/private/dashboard/DashboardModule.js"></script>
			<script src="/js/public/home/HomeModule.js"></script>
			<script src="/js/public/signup/SignupModule.js"></script>
			<script src="/js/private/dashboard/DashboardController.js"></script>
			<script src="/js/public/home/HomeController.js"></script>
			<script src="/js/public/signup/SignupController.js"></script>
			<script src="/js/public/pwt/demo.js"></script>
			<script src="/js/public/pwt/jquery-ui-1.10.4.min.js"></script>
			<script src="/js/public/pwt/modernizr.js"></script>
			<script src="/js/jquery.fittext.js"></script>
			<script src="/js/jqueryTranslator.min.js"></script>
			<script src="/js/main.js"></script>
			<!--SCRIPTS END-->
	</body>

</html>
